import{_ as l,c as e,o as i,a2 as a}from"./chunks/framework.By8LAshg.js";const u=JSON.parse('{"title":"Flexbox","description":"","frontmatter":{},"headers":[],"relativePath":"前端基础/CSS/flex.md","filePath":"前端基础/CSS/flex.md"}'),t={name:"前端基础/CSS/flex.md"},o=a('<h1 id="flexbox" tabindex="-1">Flexbox <a class="header-anchor" href="#flexbox" aria-label="Permalink to &quot;Flexbox&quot;">​</a></h1><ul><li>容器默认存在两根轴：主轴和交叉轴（也叫做侧轴）。默认水平方向的为主轴，垂直方向为侧轴。</li></ul><h2 id="容器的属性-2-3-个" tabindex="-1">容器的属性（2-3 个） <a class="header-anchor" href="#容器的属性-2-3-个" aria-label="Permalink to &quot;容器的属性（2-3 个）&quot;">​</a></h2><ul><li>flex-direction 定义主轴的方向</li><li>flex-wrap 定义是否换行</li><li>flex-flow 是 flex-direction 属性和 flex-wrap 属性的简写形式</li><li>justify-content 定义项目在主轴上的对齐方式</li><li>align-items 定义项目在侧轴上的对齐方式</li><li>align-content 定义项目在交叉轴上如何对齐</li></ul><h2 id="项目的属性-2-3-个" tabindex="-1">项目的属性（2-3 个） <a class="header-anchor" href="#项目的属性-2-3-个" aria-label="Permalink to &quot;项目的属性（2-3 个）&quot;">​</a></h2><ul><li>order 定义项目的排列顺序。数值越小，排列越靠前，默认为 0。</li><li>flex-grow 定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大。</li><li>flex-shrink 定义了项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小。</li><li>flex-basis 定义了在分配多余空间之前，项目占据的主轴空间。它的默认值为 auto，即项目的本来大小。</li><li>flex 是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。</li><li>align-self 允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。</li></ul><h2 id="扩展-flex-1-啥意思" tabindex="-1">扩展：flex: 1 啥意思 <a class="header-anchor" href="#扩展-flex-1-啥意思" aria-label="Permalink to &quot;扩展：flex: 1 啥意思&quot;">​</a></h2><ul><li>flex-grow: 1 如果存在剩余空间, 该项目会放大。</li><li>flex-shrink: 1 如果剩余空间不足，该项目会缩小。</li><li>flex-basis: 0% 设置为 0% 之后，即不占据主轴空间，但是因为有 flex-grow 和 flex-shrink 的设置，该项目会自动放大或缩小。</li></ul>',8),r=[o];function n(s,f,x,c,h,d){return i(),e("div",null,r)}const b=l(t,[["render",n]]);export{u as __pageData,b as default};
