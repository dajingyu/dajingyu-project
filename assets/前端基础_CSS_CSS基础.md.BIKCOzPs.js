import{_ as s,c as i,o as a,a2 as n}from"./chunks/framework.By8LAshg.js";const o=JSON.parse('{"title":"css","description":"","frontmatter":{},"headers":[],"relativePath":"前端基础/CSS/CSS基础.md","filePath":"前端基础/CSS/CSS基础.md"}'),l={name:"前端基础/CSS/CSS基础.md"},p=n(`<h1 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-label="Permalink to &quot;css&quot;">​</a></h1><h2 id="css3相比于css2有哪些新特性" tabindex="-1">CSS3相比于CSS2有哪些新特性？ <a class="header-anchor" href="#css3相比于css2有哪些新特性" aria-label="Permalink to &quot;CSS3相比于CSS2有哪些新特性？&quot;">​</a></h2><ul><li>选择器增强：如属性选择器、伪类选择器（:nth-child, :not()等）提供了更精细的选择能力。</li><li>边框圆角：border-radius属性让开发者能够轻松地给元素添加圆角。</li><li>阴影效果：box-shadow和text-shadow分别用于给盒子和文本添加阴影。</li><li>背景图片：background-size、background-origin和background-clip等属性提供了更多背景控制功能。</li><li>渐变：线性渐变(linear-gradient)和径向渐变(radial-gradient)允许直接在CSS中定义颜色渐变。</li><li>过渡与动画：transition和@keyframes规则使得CSS能够实现简单的动画效果。</li><li>旋转（transform） <ul><li>rotate(9deg) 旋转</li><li>scale(0.85,0.90) 缩放</li><li>translate(0px,-30px) 平移</li><li>skew(-9deg,0deg); 倾斜</li></ul></li><li>border-image</li><li>弹性盒模型（Flexbox）：通过display: flex提供了一种更加灵活的方式来布局、对齐和分配容器内项目的空间。</li><li>网格布局（Grid Layout）：引入了display: grid，为网页布局提供了更为强大的二维系统。</li><li>@media 响应式布局的媒体查询（Media Queries）</li></ul><h2 id="如何使用css3实现动画效果-请给出一个简单示例。" tabindex="-1">如何使用CSS3实现动画效果？请给出一个简单示例。 <a class="header-anchor" href="#如何使用css3实现动画效果-请给出一个简单示例。" aria-label="Permalink to &quot;如何使用CSS3实现动画效果？请给出一个简单示例。&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@keyframes fadeIn {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.animated</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  animation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: fadeIn;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  animation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 2s;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="css3中的媒体查询-media-queries" tabindex="-1">CSS3中的媒体查询（Media Queries） <a class="header-anchor" href="#css3中的媒体查询-media-queries" aria-label="Permalink to &quot;CSS3中的媒体查询（Media Queries）&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@media screen </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (max</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">width: 600px) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  body {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    font</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 14px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="css的盒子模型" tabindex="-1">CSS的盒子模型？ <a class="header-anchor" href="#css的盒子模型" aria-label="Permalink to &quot;CSS的盒子模型？&quot;">​</a></h2><ul><li><p>盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border)</p></li><li><p>有两种， IE 盒子模型、标准 W3C 盒子模型；IE的content部分包含了 border 和 padding;</p></li></ul><h2 id="css-选择符有哪些-哪些属性可以继承-优先级算法如何计算-css3新增伪类有那些" tabindex="-1">CSS 选择符有哪些？哪些属性可以继承？优先级算法如何计算？ CSS3新增伪类有那些？ <a class="header-anchor" href="#css-选择符有哪些-哪些属性可以继承-优先级算法如何计算-css3新增伪类有那些" aria-label="Permalink to &quot;CSS 选择符有哪些？哪些属性可以继承？优先级算法如何计算？ CSS3新增伪类有那些？&quot;">​</a></h2><h3 id="css-选择符" tabindex="-1">CSS 选择符： <a class="header-anchor" href="#css-选择符" aria-label="Permalink to &quot;CSS 选择符：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">id选择器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(# myid)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">类选择器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(.myclassname)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">标签选择器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(div, h1, p)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">4.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">相邻选择器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(h1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">5.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">子选择器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ul </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> li)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">6.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">后代选择器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(li a)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">7.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">通配符选择器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">8.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">属性选择器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a[rel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;external&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">9.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">伪类选择器</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a: hover, li:nth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">child)</span></span></code></pre></div><h3 id="可继承的样式" tabindex="-1">可继承的样式： <a class="header-anchor" href="#可继承的样式" aria-label="Permalink to &quot;可继承的样式：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1.font</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">size</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2.font</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">family</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3.color</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">4.text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">indent</span></span></code></pre></div><h3 id="不可继承的样式" tabindex="-1">不可继承的样式： <a class="header-anchor" href="#不可继承的样式" aria-label="Permalink to &quot;不可继承的样式：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1.border</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2.padding</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3.margin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">4.width</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">5.height</span></span></code></pre></div><h3 id="优先级算法" tabindex="-1">优先级算法： <a class="header-anchor" href="#优先级算法" aria-label="Permalink to &quot;优先级算法：&quot;">​</a></h3><p>1.优先级就近原则，同权重情况下样式定义最近者为准;</p><p>2.载入样式以最后载入的定位为准;</p><p>3.!important &gt; id &gt; class &gt; tag</p><p>4.important 比 内联优先级高，但内联比 id 要高</p><h3 id="css3新增伪类举例" tabindex="-1">CSS3新增伪类举例： <a class="header-anchor" href="#css3新增伪类举例" aria-label="Permalink to &quot;CSS3新增伪类举例：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:first</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-of-type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 选择属于其父元素的首个</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素的每个 &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p:last-of-type  选择属于其父元素的最后 &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素的每个 &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p:only-of-type  选择属于其父元素唯一的 &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素的每个 &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p:only-child    选择属于其父元素的唯一子元素的每个 &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p:nth-child(2)  选择属于其父元素的第二个子元素的每个 &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; 元素。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:enabled :disabled 控制表单控件的禁用状态。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:checked        单选框或复选框被选中。</span></span></code></pre></div>`,23),h=[p];function t(e,k,E,d,r,c){return a(),i("div",null,h)}const y=s(l,[["render",t]]);export{o as __pageData,y as default};
