import{_ as e,c as t,o,a1 as s}from"./chunks/framework.DDqzfET5.js";const S=JSON.parse('{"title":"WebSockets","description":"","frontmatter":{},"headers":[],"relativePath":"前端基础/HTML/WebSockets.md","filePath":"前端基础/HTML/WebSockets.md"}'),p={name:"前端基础/HTML/WebSockets.md"},c=s('<h1 id="websockets" tabindex="-1">WebSockets <a class="header-anchor" href="#websockets" aria-label="Permalink to &quot;WebSockets&quot;">​</a></h1><p>WebSocket 是一个全双工通讯协议。</p><p>特点：服务器可以向客户端主动推动消息，客户端也可以主动向服务器推送消息。</p><p>使用：</p><p>new WebSocket(url) 传入 url 就可以连接上 WebSocket 服务器了</p><p>通过 message：接受服务器发送的消息</p><p>通过 send 方法：可以给服务器发送消息</p><p>除此以外还有其他方法：close 关闭连接</p><p>其他事件：open：打开事件 error 错误事件 close 关闭事件</p><p>功能：WebSocket 连接时可能因为不好的网络环境会断开链接，此时可以使用心跳检测机制来进行断开重连</p><p>心跳检测:</p><p>web socket 在连接过程中可能会因为网络问题断开连接，我们需要重连，这里用到心跳检测机制</p><p>具体来说：</p><ol><li>检测是否断开链接：</li></ol><p>当我们连接上 ws 服务时，需要开启定时器，隔一段时间（10s - 30s）向 ws 服务器发送一个特殊信号（ping），同时开启定时器（2s）检测服务器是否有回应信号（pong）</p><p>如果在规定时间内有回应，继续此操作，如果没有回应，说明断开连接了，我们要开始重连 ws</p><ol start="2"><li>重连机制</li></ol><p>每隔一段时间发起 ws 的重连，同时重连次数增加，一旦重新连接成功，就归零重连次数，方便下次重连，如果重连次数超过最大次数，就要提示错误，不在尝试了</p>',18),a=[c];function r(_,n,l,i,d,k){return o(),t("div",null,a)}const h=e(p,[["render",r]]);export{S as __pageData,h as default};
