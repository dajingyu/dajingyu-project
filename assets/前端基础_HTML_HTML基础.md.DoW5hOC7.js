import{_ as a,c as i,o as e,a1 as l}from"./chunks/framework.DDqzfET5.js";const u=JSON.parse('{"title":"HTML","description":"","frontmatter":{},"headers":[],"relativePath":"前端基础/HTML/HTML基础.md","filePath":"前端基础/HTML/HTML基础.md"}'),t={name:"前端基础/HTML/HTML基础.md"},r=l(`<h1 id="html" tabindex="-1">HTML <a class="header-anchor" href="#html" aria-label="Permalink to &quot;HTML&quot;">​</a></h1><h2 id="html含义" tabindex="-1">HTML含义 <a class="header-anchor" href="#html含义" aria-label="Permalink to &quot;HTML含义&quot;">​</a></h2><ul><li>超文本标记语言</li></ul><h2 id="html5的新特性有哪些" tabindex="-1">HTML5的新特性有哪些？ <a class="header-anchor" href="#html5的新特性有哪些" aria-label="Permalink to &quot;HTML5的新特性有哪些？&quot;">​</a></h2><ul><li>语义化标签：如header, nav, article,section等，提高了文档结构的可读性。 <ul><li>去掉或者丢失样式的时候能够让页面呈现出清晰的结构</li><li>有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；</li><li>方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以意义的方式来渲染网页；</li><li>便于团队开发和维护，语义化使得网页更具可读性，是进一步开发网页的必要步骤，遵循W3C标准的团队都遵循这个标准，可以减少差异化。 多媒体支持：原生支持audio和video标签，无需插件即可播放音频和视频。</li></ul></li><li>表单增强：新增输入类型如date, email, url等，以及新的表单属性，提升用户体验和数据验证能力。</li><li>离线存储：通过Application Cache（AppCache）和localStorage/sessionStorage实现网页的离线访问和数据存储。</li><li>Canvas和SVG：用于动态绘制图形和矢量图。</li><li>拖拽释放(Drag and drop) API。</li><li>Geolocation API：允许网页获取用户的地理位置信息。</li><li>Web Workers：使JavaScript能够在后台线程运行，避免阻塞UI线程。</li><li>WebSockets：提供服务器与客户端之间的全双工通信渠道，实现实时交互。</li></ul><h3 id="解释html5的离线存储-application-cache-是如何工作的" tabindex="-1">解释HTML5的离线存储（Application Cache）是如何工作的？ <a class="header-anchor" href="#解释html5的离线存储-application-cache-是如何工作的" aria-label="Permalink to &quot;解释HTML5的离线存储（Application Cache）是如何工作的？&quot;">​</a></h3><ul><li>HTML5应用缓存允许网页在用户无网络连接时仍能访问。通过创建一个名为cache.manifest的文件列出所有需要缓存的资源（HTML, CSS, JavaScript, 图像等）。浏览器首次访问时会下载这些资源并存储在本地缓存中，之后即使没有网络，也能从缓存加载页面内容。</li></ul><h3 id="什么是web-storage-它包括哪两种类型" tabindex="-1">什么是Web Storage？它包括哪两种类型？ <a class="header-anchor" href="#什么是web-storage-它包括哪两种类型" aria-label="Permalink to &quot;什么是Web Storage？它包括哪两种类型？&quot;">​</a></h3><ul><li>Web Storage是一种在用户浏览器上存储数据的新方法，比cookies更强大且容量更大。它分为两种： localStorage：提供永久存储，除非主动删除数据或用户清除浏览器数据，否则数据一直存在。</li><li>sessionStorage：仅在当前浏览器窗口或标签页存在，一旦关闭，数据就会被清除。</li></ul><h3 id="html5如何改善了表单处理" tabindex="-1">HTML5如何改善了表单处理？ <a class="header-anchor" href="#html5如何改善了表单处理" aria-label="Permalink to &quot;HTML5如何改善了表单处理？&quot;">​</a></h3><ul><li>引入新的输入类型（如日期、颜色、电子邮件等）和属性（如required、pattern）简化了数据验证，减少了JavaScript和后端验证的需求。</li><li>新增表单元素如datalist,output, progress, 和 meter 提升了表单的交互性和反馈能力。</li></ul><h3 id="简述canvas与svg的区别。" tabindex="-1">简述Canvas与SVG的区别。 <a class="header-anchor" href="#简述canvas与svg的区别。" aria-label="Permalink to &quot;简述Canvas与SVG的区别。&quot;">​</a></h3><ul><li>Canvas：是一个基于像素的绘图API，适合绘制图形、图表或进行图像处理。一旦画布上的内容被绘制完成，它就变成了静态的位图，不便于修改。</li><li>SVG（Scalable Vector Graphics）：是基于矢量的图形格式，适用于图标、复杂的图表和动画。SVG元素是DOM的一部分，可以被CSS样式化，也可以用JavaScript进行动态操作。</li></ul><h2 id="html5兼容问题" tabindex="-1">html5兼容问题 <a class="header-anchor" href="#html5兼容问题" aria-label="Permalink to &quot;html5兼容问题&quot;">​</a></h2><h3 id="浏览器默认的margin和padding不同" tabindex="-1">浏览器默认的margin和padding不同 <a class="header-anchor" href="#浏览器默认的margin和padding不同" aria-label="Permalink to &quot;浏览器默认的margin和padding不同&quot;">​</a></h3><ul><li>加一个全局的 *{margin:0;padding:0;} 来统一。</li></ul><h3 id="chrome-中文界面下默认会将小于-12px-的文本强制按照-12px-显示" tabindex="-1">Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示 <a class="header-anchor" href="#chrome-中文界面下默认会将小于-12px-的文本强制按照-12px-显示" aria-label="Permalink to &quot;Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示&quot;">​</a></h3><ul><li>可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决</li></ul><h3 id="超链接访问过后-hover-样式就不出现了-被点击访问过的超链接样式不在具有-hover-和-active-了" tabindex="-1">超链接访问过后 hover 样式就不出现了，被点击访问过的超链接样式不在具有 hover 和 active 了 <a class="header-anchor" href="#超链接访问过后-hover-样式就不出现了-被点击访问过的超链接样式不在具有-hover-和-active-了" aria-label="Permalink to &quot;超链接访问过后 hover 样式就不出现了，被点击访问过的超链接样式不在具有 hover 和 active 了&quot;">​</a></h3><ul><li>解决方法：改变CSS属性的排列顺序 L-V-H-A</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:link {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:visited {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:hover {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:active {}</span></span></code></pre></div><h3 id="上下margin重合问题-ie和ff都存在-相邻的两个div的margin-left和margin-right不会重合-但是margin-top和margin-bottom却会发生重合。" tabindex="-1">上下margin重合问题：ie和ff都存在，相邻的两个div的margin-left和margin-right不会重合，但是margin-top和margin-bottom却会发生重合。 <a class="header-anchor" href="#上下margin重合问题-ie和ff都存在-相邻的两个div的margin-left和margin-right不会重合-但是margin-top和margin-bottom却会发生重合。" aria-label="Permalink to &quot;上下margin重合问题：ie和ff都存在，相邻的两个div的margin-left和margin-right不会重合，但是margin-top和margin-bottom却会发生重合。&quot;">​</a></h3><ul><li>解决方法：养成良好的代码编写习惯，同时采用margin-top或者同时采用margin-bottom。</li></ul><p></p>`,24),n=[r];function s(o,h,c,p,d,m){return e(),i("div",null,n)}const k=a(t,[["render",s]]);export{u as __pageData,k as default};
